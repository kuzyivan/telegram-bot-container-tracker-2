"""Add missing user columns

Revision ID: 3045d82ec1ca
Revises: b1b7c58c8ce4
Create Date: 2025-10-21 13:30:00.000000

"""
from typing import Sequence, Union
from datetime import datetime
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3045d82ec1ca'
down_revision: Union[str, None] = 'b1b7c58c8ce4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # --- ИСПРАВЛЕНИЕ: Шаг 1. Вставляем UPDATE для заполнения NULL ---
    # Мы принудительно устанавливаем текущее время для всех строк с NULL в created_at
    op.execute(
        sa.text(
            "UPDATE terminal_containers SET created_at = NOW() WHERE created_at IS NULL"
        )
    )
    # --- КОНЕЦ ИСПРАВЛЕНИЯ ---

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stations_cache',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('original_name', sa.String(), nullable=False),
    sa.Column('found_name', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('original_name')
    )
    op.create_index('ix_stations_cache_found_name', 'stations_cache', ['found_name'], unique=False)
    op.create_index('ix_stations_cache_original_name', 'stations_cache', ['original_name'], unique=False)
    op.create_table('train_event_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('container_number', sa.String(length=11), nullable=False),
    sa.Column('train_number', sa.String(), nullable=False),
    sa.Column('event_description', sa.Text(), nullable=False),
    sa.Column('station', sa.String(), nullable=False),
    sa.Column('event_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('notification_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_train_event_log_container_number', 'train_event_log', ['container_number'], unique=False)
    op.create_index('ix_train_event_log_train_number', 'train_event_log', ['train_number'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('subscription_name', sa.String(), nullable=False),
    sa.Column('containers', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('notification_time', sa.Time(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_telegram_id'], ['users.telegram_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_subscriptions_subscription_name', 'subscriptions', ['subscription_name'], unique=False)
    op.create_table('user_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('query_text', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_telegram_id'], ['users.telegram_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscription_emails',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=False),
    sa.Column('email_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['email_id'], ['user_emails.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_index('ix_railway_stations_name', table_name='railway_stations')
    op.drop_table('railway_stations')
    op.drop_table('subscription_email_association')
    op.drop_table('stats')
    op.drop_index('ix_tracking_subscriptions_display_id', table_name='tracking_subscriptions')
    op.drop_index('ix_tracking_subscriptions_user_telegram_id', table_name='tracking_subscriptions')
    op.drop_table('tracking_subscriptions')
    op.drop_index('ix_train_operation_events_station', table_name='train_operation_events')
    op.drop_index('ix_train_operation_events_train_number', table_name='train_operation_events')
    op.drop_table('train_operation_events')
    op.add_column('terminal_containers', sa.Column('accept_date', sa.Date(), nullable=True))
    op.add_column('terminal_containers', sa.Column('accept_time', sa.Time(), nullable=True))
    op.add_column('terminal_containers', sa.Column('status', sa.String(), nullable=True))
    op.add_column('terminal_containers', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.alter_column('terminal_containers', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               server_default=sa.text('now()'),
               nullable=False)
    op.drop_index('ix_terminal_containers_id', table_name='terminal_containers')
    op.drop_column('terminal_containers', 'destination_station')
    op.drop_column('terminal_containers', 'zone')
    op.drop_column('terminal_containers', 'terminal')
    op.drop_column('terminal_containers', 'raw_comment')
    op.drop_column('terminal_containers', 'short_name')
    op.drop_column('terminal_containers', 'stock')
    op.drop_column('terminal_containers', 'customs_mode')
    op.drop_column('terminal_containers', 'status_comment')
    op.drop_column('terminal_containers', 'inn')
    op.drop_column('terminal_containers', 'note')
    op.alter_column('tracking', 'container_number',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_index('ix_tracking_container_number', 'tracking', ['container_number'], unique=False)
    op.alter_column('user_emails', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.drop_constraint('_user_email_uc', 'user_emails', type_='unique')
    op.drop_index('ix_user_emails_user_telegram_id', table_name='user_emails')
    op.create_index('ix_user_emails_email', 'user_emails', ['email'], unique=False)
    op.drop_constraint('user_emails_user_telegram_id_fkey', 'user_emails', type_='foreignkey')
    op.create_foreign_key(None, 'user_emails', 'users', ['user_telegram_id'], ['telegram_id'], ondelete='CASCADE')
    op.drop_column('user_emails', 'is_verified')
    op.add_column('users', sa.Column('first_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.drop_constraint('users_telegram_id_key', 'users', type_='unique')
    op.create_index('ix_users_telegram_id', 'users', ['telegram_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_telegram_id', table_name='users')
    op.create_unique_constraint('users_telegram_id_key', 'users', ['telegram_id'])
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.add_column('user_emails', sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'user_emails', type_='foreignkey')
    op.create_foreign_key('user_emails_user_telegram_id_fkey', 'user_emails', 'users', ['user_telegram_id'], ['telegram_id'])
    op.drop_index('ix_user_emails_email', table_name='user_emails')
    op.create_index('ix_user_emails_user_telegram_id', 'user_emails', ['user_telegram_id'], unique=False)
    op.create_unique_constraint('_user_email_uc', 'user_emails', ['user_telegram_id', 'email'])
    op.alter_column('user_emails', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.drop_index('ix_tracking_container_number', table_name='tracking')
    op.alter_column('tracking', 'container_number',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('terminal_containers', sa.Column('note', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('terminal_containers', sa.Column('inn', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('terminal_containers', sa.Column('status_comment', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('terminal_containers', sa.Column('customs_mode', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('terminal_containers', sa.Column('stock', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('terminal_containers', sa.Column('short_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('terminal_containers', sa.Column('raw_comment', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('terminal_containers', sa.Column('terminal', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('terminal_containers', sa.Column('zone', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('terminal_containers', sa.Column('destination_station', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_index('ix_terminal_containers_id', 'terminal_containers', ['id'], unique=False)
    op.alter_column('terminal_containers', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_server_default=sa.text('now()'),
               nullable=True)
    op.drop_column('terminal_containers', 'updated_at')
    op.drop_column('terminal_containers', 'status')
    op.drop_column('terminal_containers', 'accept_time')
    op.drop_column('terminal_containers', 'accept_date')
    op.create_table('train_operation_events',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('train_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('event_description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('station', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('event_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('notification_sent_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('container_number', sa.VARCHAR(length=11), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='train_operation_events_pkey')
    )
    op.create_index('ix_train_operation_events_train_number', 'train_operation_events', ['train_number'], unique=False)
    op.create_index('ix_train_operation_events_station', 'train_operation_events', ['station'], unique=False)
    op.create_table('tracking_subscriptions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_telegram_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('subscription_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('containers', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False),
    sa.Column('notify_time', sa.TIME(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('display_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('target_emails', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_telegram_id'], ['users.telegram_id'], name='tracking_subscriptions_user_telegram_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='tracking_subscriptions_pkey')
    )
    op.create_index('ix_tracking_subscriptions_user_telegram_id', 'tracking_subscriptions', ['user_telegram_id'], unique=False)
    op.create_index('ix_tracking_subscriptions_display_id', 'tracking_subscriptions', ['display_id'], unique=True)
    op.create_table('stats',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('container_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='stats_pkey')
    )
    op.create_table('subscription_email_association',
    sa.Column('subscription_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_email_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['subscription_id'], ['tracking_subscriptions.id'], name='subscription_email_association_subscription_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_email_id'], ['user_emails.id'], name='subscription_email_association_user_email_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('subscription_id', 'user_email_id', name='subscription_email_association_pkey')
    )
    op.create_table('railway_stations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('latitude', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('longitude', sa.REAL(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='railway_stations_pkey')
    )
    op.create_index('ix_railway_stations_name', 'railway_stations', ['name'], unique=False)
    op.drop_table('subscription_emails')
    op.drop_table('user_requests')
    op.drop_index('ix_subscriptions_subscription_name', table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index('ix_train_event_log_train_number', table_name='train_event_log')
    op.drop_index('ix_train_event_log_container_number', table_name='train_event_log')
    op.drop_table('train_event_log')
    op.drop_index('ix_stations_cache_original_name', table_name='stations_cache')
    op.drop_index('ix_stations_cache_found_name', table_name='stations_cache')
    op.drop_table('stations_cache')
    # ### end Alembic commands ###