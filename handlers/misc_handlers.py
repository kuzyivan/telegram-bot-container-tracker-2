# handlers/misc_handlers.py
from telegram import Update, ReplyKeyboardRemove
from telegram.ext import ContextTypes
from telegram.constants import ParseMode
from utils.keyboards import reply_keyboard
from db import get_tracked_containers_by_user, remove_user_tracking
from logger import get_logger

logger = get_logger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + –≤—ã–≤–æ–¥ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
    –í–∞–∂–Ω–æ: —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –¢–û–õ–¨–ö–û –∏–∑ –∞–ø–¥–µ–π—Ç–∞ —Å message.
    """
    chat_id = update.effective_chat.id if update.effective_chat else None
    logger.info(f"[start] chat_id={chat_id}")

    # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π: –µ—Å–ª–∏ –ø—Ä–∏—à—ë–ª callback_query, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
    if update.callback_query:
        await update.callback_query.answer()
        if chat_id:
            await context.bot.send_message(
                chat_id=chat_id,
                text="–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ üöÜ\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é:",
                reply_markup=reply_keyboard
            )
        return

    # –û–±—ã—á–Ω—ã–π –∫–µ–π—Å: –∞–ø–¥–µ–π—Ç —Å message
    if update.message:
        await update.message.reply_text(
            "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ üöÜ\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é:",
            reply_markup=reply_keyboard,
        )
        # –°—Ç–∏–∫–µ—Ä (–∫–∞–∫ –±—ã–ª–æ)
        await context.bot.send_sticker(
            chat_id=update.effective_chat.id,
            sticker="CAACAgIAAxkBAAJBOGiisUho8mpdezoAATaKIfwKypCNVgACb2wAAmvzmUhmDoR2oiG-5jYE"
        )

async def show_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü–µ—Ä–µ–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
    """
    chat_id = update.effective_chat.id if update.effective_chat else None
    logger.info(f"[show_menu] chat_id={chat_id}")

    if update.callback_query:
        await update.callback_query.answer()
        if chat_id:
            await context.bot.send_message(
                chat_id=chat_id,
                text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é:",
                reply_markup=reply_keyboard
            )
        return

    if update.message:
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é:", reply_markup=reply_keyboard)

async def handle_sticker(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û—Ç–≤–µ—Ç –Ω–∞ —Å—Ç–∏–∫–µ—Ä: –ø–æ–∫–∞–∑–∞—Ç—å –µ–≥–æ file_id –∏ –≤–µ—Ä–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–µ–Ω—é.
    """
    if not update.message or not update.message.sticker:
        return

    sticker = update.message.sticker
    user_id = update.effective_user.id if update.effective_user else "‚Äî"
    logger.info(f"[handle_sticker] user={user_id}, sticker_id={sticker.file_id}")

    # –í Markdown –≤ —Å—Ç–∞—Ä–æ–º –∫–æ–¥–µ –±—ã–ª–∞ –æ–±—Ä–∞—Ç–Ω–∞—è –∫–∞–≤—ã—á–∫–∞; –∑–¥–µ—Å—å –∏—Å–ø–æ–ª—å–∑—É–µ–º MarkdownV2‚Äë–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    await update.message.reply_text(f"üÜî ID —ç—Ç–æ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞:\n`{sticker.file_id}`", parse_mode=ParseMode.MARKDOWN)
    await show_menu(update, context)

async def show_my_tracking(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–æ—è—Ç –Ω–∞ —Å–ª–µ–∂–µ–Ω–∏–∏.
    """
    user_id = update.message.from_user.id if update.message else (update.effective_user.id if update.effective_user else None)
    if not user_id:
        return
    containers = await get_tracked_containers_by_user(user_id)
    if containers:
        msg = "–í—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:\n" + "\n".join(containers)
    else:
        msg = "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã."
    await update.message.reply_text(msg)

async def cancel_my_tracking(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –°–Ω—è—Ç—å –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user_id = update.message.from_user.id if update.message else (update.effective_user.id if update.effective_user else None)
    if not user_id:
        return
    await remove_user_tracking(user_id)
    await update.message.reply_text("–í—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω—ã.", reply_markup=ReplyKeyboardRemove())
    await show_menu(update, context)