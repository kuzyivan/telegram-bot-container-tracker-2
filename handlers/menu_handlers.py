# handlers/menu_handlers.py
from telegram import Update
from telegram.ext import ContextTypes
from logger import get_logger
from utils.keyboards import reply_keyboard

logger = get_logger(__name__)

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
async def reply_keyboard_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text if update.message else ""
    if text == "üì¶ –î–∏—Å–ª–æ–∫–∞—Ü–∏—è":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞:")
    elif text == "üîî –ó–∞–¥–∞—Ç—å —Å–ª–µ–∂–µ–Ω–∏–µ":
        # –ó–¥–µ—Å—å –ø—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º ‚Äî –¥–∞–ª—å–Ω–µ–π—à–∞—è –ª–æ–≥–∏–∫–∞ –≤ tracking_conversation_handler
        return
    elif text == "‚ùå –û—Ç–º–µ–Ω–∞ —Å–ª–µ–∂–µ–Ω–∏—è":
        from handlers.tracking_handlers import cancel_tracking_start
        return await cancel_tracking_start(update, context)
    else:
        await update.message.reply_text("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.", reply_markup=reply_keyboard)

# --- Inline –∫–Ω–æ–ø–∫–∏ ---
async def menu_button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –í–ê–ñ–ù–û: –Ω–µ –≤—ã–∑—ã–≤–∞–µ–º start() –∏–∑ –¥—Ä—É–≥–æ–≥–æ –º–æ–¥—É–ª—è, —á—Ç–æ–±—ã –Ω–µ –ø–ª–æ–¥–∏—Ç—å —Ü–∏–∫–ª—ã –∏–º–ø–æ—Ä—Ç–æ–≤.
    –ü—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏.
    """
    query = update.callback_query
    await query.answer()
    if query.data == "start":
        # –ü–æ–∫–∞–∂–µ–º –º–µ–Ω—é ¬´–≤ –ª–æ–±¬ª
        await context.bot.send_message(
            chat_id=query.message.chat_id,
            text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é:",
            reply_markup=reply_keyboard,
        )
    elif query.data == "dislocation":
        await query.edit_message_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞:")
    elif query.data == "track_request":
        await query.edit_message_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —Å–ª–µ–∂–µ–Ω–∏—è:")

async def dislocation_inline_callback_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    await query.edit_message_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞:")