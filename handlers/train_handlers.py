# handlers/train_handlers.py
from __future__ import annotations

from pathlib import Path
from typing import Tuple, Any

from telegram import Update
from telegram.ext import (
    Application,
    ContextTypes,
    CommandHandler,
    MessageHandler,
    filters,
)

from logger import get_logger
from config import ADMIN_CHAT_ID
from services.train_importer import import_train_from_excel

logger = get_logger(__name__)

# –ü–∞–ø–∫–∞ –¥–ª—è —Ä—É—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –ø–æ–µ–∑–¥–æ–≤
DOWNLOAD_DIR = Path("/root/AtermTrackBot/download_train")
DOWNLOAD_DIR.mkdir(parents=True, exist_ok=True)


# /upload_train ‚Äî –ø–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ –∑–∞–≥—Ä—É–∑–∫–µ
async def upload_train_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.effective_user or update.effective_user.id != ADMIN_CHAT_ID:
        return
    await update.message.reply_text(
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—é–¥–∞ Excel-—Ñ–∞–π–ª –≤–∏–¥–∞ '–ö–ü –ö25-073 –°–µ–ª—è—Ç–∏–Ω–æ.xlsx'. "
        "–ë–æ—Ç –≤–æ–∑—å–º—ë—Ç ¬´–ö25-073¬ª –∏–∑ –∏–º–µ–Ω–∏ –∏ –ø—Ä–æ—Å—Ç–∞–≤–∏—Ç –µ–≥–æ –≤ —Å—Ç–æ–ª–±–µ—Ü ¬´train¬ª "
        "–¥–ª—è –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª–µ."
    )


# –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (xlsx)
async def handle_train_excel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    if not user or user.id != ADMIN_CHAT_ID:
        # –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ-–∞–¥–º–∏–Ω–∞
        return

    if not update.message or not update.message.document:
        return

    doc = update.message.document
    filename = (doc.file_name or "train.xlsx").strip()

    # –¥–æ–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ .xlsx
    if not filename.lower().endswith(".xlsx"):
        await update.message.reply_text("‚õî –ü—Ä–∏—à–ª–∏—Ç–µ Excel-—Ñ–∞–π–ª .xlsx")
        return

    # —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –Ω–∞ –¥–∏—Å–∫
    file = await context.bot.get_file(doc.file_id)
    dest = DOWNLOAD_DIR / filename
    await file.download_to_drive(custom_path=str(dest))
    logger.info(f"üì• –ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª –æ—Ç –∞–¥–º–∏–Ω–∞: {dest}")

    # –≤—ã–∑—ã–≤–∞–µ–º –∏–º–ø–æ—Ä—Ç—ë—Ä –ø–æ–µ–∑–¥–æ–≤
    try:
        result: Any = await import_train_from_excel(dest)
        # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –æ–±–µ —Å–∏–≥–Ω–∞—Ç—É—Ä—ã: (updated, train_code) –ò–õ–ò (updated, total, train_code)
        updated: int = 0
        total: int | None = None
        train_code: str = "‚Äî"

        if isinstance(result, tuple):
            if len(result) == 3:
                updated, total, train_code = result  # type: ignore[misc]
            elif len(result) == 2:
                updated, train_code = result  # type: ignore[misc]
            else:
                # –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞
                logger.warning(f"import_train_from_excel() –≤–µ—Ä–Ω—É–ª –Ω–µ–æ–±—ã—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        else:
            logger.warning(f"import_train_from_excel() –≤–µ—Ä–Ω—É–ª –Ω–µ-–∫–æ—Ä—Ç–µ–∂: {type(result)}")

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        if total is not None:
            text = (
                f"‚úÖ –ü–æ–µ–∑–¥ <b>{train_code}</b> –æ–±—Ä–∞–±–æ—Ç–∞–Ω.\n"
                f"–û–±–Ω–æ–≤–ª–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: <b>{updated}</b> –∏–∑ <b>{total}</b>."
            )
        else:
            text = (
                f"‚úÖ –ü–æ–µ–∑–¥ <b>{train_code}</b> –æ–±—Ä–∞–±–æ—Ç–∞–Ω.\n"
                f"–û–±–Ω–æ–≤–ª–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: <b>{updated}</b>."
            )

        await update.message.reply_text(text, parse_mode="HTML")
    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –ø–æ–µ–∑–¥–∞ –∏–∑ —Ñ–∞–π–ª–∞")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏

def register_train_handlers(app: Application) -> None:
    """–ü–æ–¥–∫–ª—é—á–∏—Ç—å —Ö–µ–Ω–¥–ª–µ—Ä—ã –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–µ–∑–¥–æ–≤ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é PTB."""
    # –ö–æ–º–∞–Ω–¥–∞-–ø–æ–¥—Å–∫–∞–∑–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞
    app.add_handler(CommandHandler("upload_train", upload_train_help))

    # –ü—Ä–∏—ë–º Excel-–¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (xlsx) –æ—Ç –∞–¥–º–∏–Ω–∞
    app.add_handler(
        MessageHandler(
            filters.Chat(ADMIN_CHAT_ID)
            & filters.Document.MimeType(
                "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
            ),
            handle_train_excel,
        )
    )

    # –ü—Ä–æ –∑–∞–ø–∞—Å ‚Äî –µ—Å–ª–∏ Telegram –Ω–µ –ø—Ä–∏—Å–ª–∞–ª MIME-—Ç–∏–ø, –ø—Ä–æ–≤–µ—Ä–∏–º –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é
    app.add_handler(
        MessageHandler(
            filters.Chat(ADMIN_CHAT_ID)
            & filters.Document.FileExtension("xlsx"),
            handle_train_excel,
        )
    )