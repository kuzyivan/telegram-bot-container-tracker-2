# handlers/train_handlers.py
from pathlib import Path
from telegram import Update
from telegram.ext import ContextTypes, CommandHandler, MessageHandler, filters
from logger import get_logger
from config import ADMIN_CHAT_ID
from services.train_importer import import_train_from_excel

logger = get_logger(__name__)

DOWNLOAD_DIR = Path("/root/AtermTrackBot/download_train")
DOWNLOAD_DIR.mkdir(parents=True, exist_ok=True)

# /upload_train –∫–∞–∫ —è–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
async def upload_train_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_CHAT_ID:
        return
    await update.message.reply_text(
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—é–¥–∞ Excel-—Ñ–∞–π–ª –≤–∏–¥–∞ '–ö–ü –ö25-073 –°–µ–ª—è—Ç–∏–Ω–æ.xlsx'. "
        "–ë–æ—Ç –≤–æ–∑—å–º—ë—Ç ¬´–ö25-073¬ª –∏–∑ –∏–º–µ–Ω–∏ –∏ –ø—Ä–æ—Å—Ç–∞–≤–∏—Ç –µ–≥–æ –≤ —Å—Ç–æ–ª–±–µ—Ü ¬´train¬ª "
        "–¥–ª—è –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª–µ."
    )

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (xlsx)
async def handle_train_excel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    if not user or user.id != ADMIN_CHAT_ID:
        # –∏–≥–Ω–æ—Ä–∏–º —á—É–∂–∏—Ö
        return

    doc = update.message.document if update.message else None
    if not doc:
        return

    # –¥–æ–ø—É—Å—Ç–∏–º —Ç–æ–ª—å–∫–æ XLSX
    filename = doc.file_name or "train.xlsx"
    if not filename.lower().endswith(".xlsx"):
        await update.message.reply_text("‚õî –ü—Ä–∏—à–ª–∏—Ç–µ Excel-—Ñ–∞–π–ª .xlsx")
        return

    # —Å–∫–∞—á–∏–≤–∞–µ–º
    file = await context.bot.get_file(doc.file_id)
    dest = DOWNLOAD_DIR / filename
    await file.download_to_drive(custom_path=str(dest))
    logger.info(f"üì• –ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª –æ—Ç –∞–¥–º–∏–Ω–∞: {dest}")

    # –∏–º–ø–æ—Ä—Ç
    try:
        updated, train_code = await import_train_from_excel(dest)
        await update.message.reply_text(
            f"‚úÖ –ü–æ–µ–∑–¥ <b>{train_code}</b> –æ–±—Ä–∞–±–æ—Ç–∞–Ω.\n"
            f"–û–±–Ω–æ–≤–ª–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: <b>{updated}</b>.",
            parse_mode="HTML",
        )
    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –ø–æ–µ–∑–¥–∞ –∏–∑ —Ñ–∞–π–ª–∞")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")