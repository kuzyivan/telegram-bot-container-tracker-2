# handlers/admin/panel.py
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes
from config import ADMIN_CHAT_ID
from logger import get_logger

# ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–¥–∞–ª—è–µ–º –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–º–ø–æ—Ä—Ç—ã 'force_notify_cmd' –∏ 'test_notify_cmd'
from .exports import stats, tracking, exportstats 
# from .notifications import force_notify_cmd, test_notify_cmd # <-- –£–î–ê–õ–Ø–ï–ú –≠–¢–£ –°–¢–†–û–ö–£

logger = get_logger(__name__)

# --- –û—Å–Ω–æ–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å ---

async def admin_panel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    if update.effective_user.id != ADMIN_CHAT_ID:
        logger.warning(f"–ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –æ—Ç {update.effective_user.id}")
        return

    text = "üõ†Ô∏è **–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    
    keyboard = [
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å—É—Ç–∫–∏", callback_data='admin_stats')],
        [
            InlineKeyboardButton("üì§ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–ø—Ä–æ—Å–æ–≤", callback_data='admin_exportstats'),
            InlineKeyboardButton("üì¶ –≠–∫—Å–ø–æ—Ä—Ç –ø–æ–¥–ø–∏—Å–æ–∫", callback_data='admin_tracking')
        ],
        # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ö–Ω–æ–ø–∫–∏ —Ç–µ–ø–µ—Ä—å –±—É–¥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤ bot.py, 
        # –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–ª–±—ç–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å.
        [
            InlineKeyboardButton("üîî –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞", callback_data='admin_force_notify'),
            InlineKeyboardButton("üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", callback_data='admin_test_notify')
        ],
        [InlineKeyboardButton("üîÑ –°–∫—Ä—ã—Ç—å", callback_data='admin_hide')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    if update.message:
        await update.message.reply_text(
            text, 
            reply_markup=reply_markup, 
            parse_mode='Markdown',
            reply_to_message_id=update.message.message_id 
        )
    elif update.callback_query:
         await update.callback_query.message.edit_text(
             text, 
             reply_markup=reply_markup, 
             parse_mode='Markdown'
         )

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±—ç–∫–æ–≤ ---

async def admin_panel_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –Ω–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏."""
    query = update.callback_query
    
    if query.from_user.id != ADMIN_CHAT_ID:
        await query.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    await query.answer()
    data = query.data
    
    if data == 'admin_stats':
        await stats(update, context) 
    elif data == 'admin_exportstats':
        await exportstats(update, context)
    elif data == 'admin_tracking':
        await tracking(update, context)
    elif data == 'admin_force_notify':
        # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –í–º–µ—Å—Ç–æ –≤—ã–∑–æ–≤–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–º–∞–Ω–¥—ã, 
        # —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /force_notify
        await query.message.reply_text("–î–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /broadcast –∏–ª–∏ /force_notify")
    elif data == 'admin_test_notify':
        # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ, —É–≤–µ–¥–æ–º–ª—è–µ–º –æ –∫–æ–º–∞–Ω–¥–µ /test_notify
        await query.message.reply_text("–î–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /test_notify")
    elif data == 'admin_hide':
        await query.message.delete()