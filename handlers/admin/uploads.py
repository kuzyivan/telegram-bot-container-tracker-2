# handlers/admin/uploads.py
import os
import re
import asyncio
from pathlib import Path
from telegram import Update
from telegram.ext import ContextTypes

from config import ADMIN_CHAT_ID
from logger import get_logger
from services.dislocation_importer import process_dislocation_file, DOWNLOAD_DIR as DISLOCATION_DOWNLOAD_FOLDER # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: DOWNLOAD_DIR
from services.train_importer import import_train_from_excel, extract_train_code_from_filename
from services.file_utils import save_temp_file_async
from utils.notify import notify_admin

logger = get_logger(__name__)

async def upload_file_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ —Å–ø–æ—Å–æ–±–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤."""
    if update.effective_user.id != ADMIN_CHAT_ID or not update.message:
        return

    text = (
        "**–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–æ–≤:**\n\n"
        "1. **–§–∞–π–ª—ã –¥–∏—Å–ª–æ–∫–∞—Ü–∏–∏ (103):**\n"
        "   - –ò–º—è —Ñ–∞–π–ª–∞ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å `103_` (–Ω–∞–ø—Ä–∏–º–µ—Ä, `103_20251021.xlsx`).\n"
        "   - –ë—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∏—Å–ª–æ–∫–∞—Ü–∏–∏.\n\n"
        "2. **–§–∞–π–ª—ã –ø–æ–µ–∑–¥–æ–≤ (KXX-YYY):**\n"
        "   - –ò–º—è —Ñ–∞–π–ª–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–¥ –ø–æ–µ–∑–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `–ö–ü –ö25-073 –°–µ–ª—è—Ç–∏–Ω–æ.xlsx`).\n"
        "   - –ë—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏–≤—è–∑–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∫ –ø–æ–µ–∑–¥—É.\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ Excel-—Ñ–∞–π–ª –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç (–Ω–µ –∫–∞–∫ —Ñ–æ—Ç–æ)."
    )
    await update.message.reply_text(text, parse_mode='Markdown')


async def handle_admin_document(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Ñ–∞–π–ª—ã Excel."""
    if update.effective_user.id != ADMIN_CHAT_ID or not update.message or not update.message.document:
        return
    
    document = update.message.document
    original_filename = document.file_name
    
    if not original_filename or not original_filename.lower().endswith('.xlsx'):
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ .xlsx.")
        return

    file_id = document.file_id
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
    dest_folder = DISLOCATION_DOWNLOAD_FOLDER # –ò—Å–ø–æ–ª—å–∑—É–µ–º DISLOCATION_DOWNLOAD_FOLDER
    
    await update.message.reply_text(f"üì• –ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª: **{original_filename}**", parse_mode='Markdown')
    
    dest_path = await save_temp_file_async(
        context.bot, 
        file_id, 
        original_filename, 
        dest_folder
    )
    
    if not dest_path:
        await notify_admin(f"‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª {original_filename}.", silent=False)
        return

    # --- –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ ---

    # –ü—Ä–æ–≤–µ—Ä–∫–∞: –§–∞–π–ª –¥–∏—Å–ª–æ–∫–∞—Ü–∏–∏?
    if original_filename.lower().startswith('103_'):
        logger.info(f"üì• [Admin Upload] –ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª: {original_filename}")
        logger.info(f"[Admin Upload] –§–∞–π–ª '{original_filename}' –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫ —Ñ–∞–π–ª –¥–∏—Å–ª–æ–∫–∞—Ü–∏–∏.")
        
        try:
            processed_count = await process_dislocation_file(str(dest_path))
            await update.message.reply_text(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –¥–∏—Å–ª–æ–∫–∞—Ü–∏–∏: **{processed_count}**.", parse_mode='Markdown')
            
        except Exception as e:
            logger.error(f"‚ùå [Admin Upload] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ '{original_filename}'", exc_info=True)
            await update.message.reply_text(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ –¥–∏—Å–ª–æ–∫–∞—Ü–∏–∏: {e}")
            
    # –ü—Ä–æ–≤–µ—Ä–∫–∞: –§–∞–π–ª –ø–æ–µ–∑–¥–∞?
    elif extract_train_code_from_filename(original_filename):
        train_code = extract_train_code_from_filename(original_filename)
        logger.info(f"üì• [Admin Upload] –ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª: {original_filename}. –û–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–æ–¥ –ø–æ–µ–∑–¥–∞: {train_code}")
        
        try:
            updated_count, total_count, _ = await import_train_from_excel(str(dest_path))
            
            await update.message.reply_text(
                f"‚úÖ –ò–º–ø–æ—Ä—Ç –ø–æ–µ–∑–¥–∞ **{train_code}** –∑–∞–≤–µ—Ä—à–µ–Ω.\n"
                f"–ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –≤ —Ñ–∞–π–ª–µ: **{total_count}**\n"
                f"–û–±–Ω–æ–≤–ª–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –≤ –±–∞–∑–µ: **{updated_count}**",
                parse_mode='Markdown'
            )
        except Exception as e:
            logger.error(f"‚ùå [Admin Upload] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ –ø–æ–µ–∑–¥–∞ '{original_filename}'", exc_info=True)
            await update.message.reply_text(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ –ø–æ–µ–∑–¥–∞: {e}")
            
    else:
        await update.message.reply_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø —Ñ–∞–π–ª–∞ (–¥–∏—Å–ª–æ–∫–∞—Ü–∏—è 103_ –∏–ª–∏ –ø–æ–µ–∑–¥ KXX-YYY).")
        
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    if os.path.exists(dest_path):
        os.remove(dest_path)