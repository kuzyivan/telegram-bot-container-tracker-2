# handlers/admin/uploads.py
from telegram import Update
from telegram.ext import ContextTypes
import os
from pathlib import Path

from .utils import admin_only_handler # ‚úÖ –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨
from logger import get_logger
from services.train_importer import import_train_from_excel, extract_train_code_from_filename
from services.dislocation_importer import process_dislocation_file, DOWNLOAD_FOLDER as DISLOCATION_DOWNLOAD_FOLDER

logger = get_logger(__name__)

def is_dislocation_file(filename: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ –∏–º—è —Ñ–∞–π–ª–∞ —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞ '103_'."""
    return os.path.basename(filename).strip().startswith("103_")

async def upload_file_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä—É—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–æ–≤."""
    if not await admin_only_handler(update, context):
        return
    
    await update.message.reply_text(
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ Excel-—Ñ–∞–π–ª (.xlsx) –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:\n\n"
        "üìÑ **–§–∞–π–ª –¥–∏—Å–ª–æ–∫–∞—Ü–∏–∏**: –ò–º—è —Ñ–∞–π–ª–∞ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å `103_`.\n\n"
        "üöÜ **–§–∞–π–ª –ø–æ–µ–∑–¥–∞**: –ò–º—è —Ñ–∞–π–ª–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–æ–º–µ—Ä –≤–∏–¥–∞ `–ö25-073`.",
        parse_mode="Markdown"
    )

async def handle_admin_document(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ï–¥–∏–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Excel-—Ñ–∞–π–ª–æ–≤ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    if not await admin_only_handler(update, context) or not update.message or not update.message.document:
        return

    doc = update.message.document
    filename = (doc.file_name or "unknown.xlsx").strip()
    
    if not filename.lower().endswith(".xlsx"):
        await update.message.reply_text("‚õî –ü—Ä–∏—à–ª–∏—Ç–µ Excel-—Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ .xlsx")
        return

    os.makedirs(DISLOCATION_DOWNLOAD_FOLDER, exist_ok=True)
    dest_path = Path(DISLOCATION_DOWNLOAD_FOLDER) / filename
    
    file = await context.bot.get_file(doc.file_id)
    await file.download_to_drive(custom_path=str(dest_path))
    logger.info(f"üì• [Admin Upload] –ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª: {filename}")

    try:
        if extract_train_code_from_filename(filename):
            logger.info(f"[Admin Upload] –§–∞–π–ª '{filename}' –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫ —Ñ–∞–π–ª –ø–æ–µ–∑–¥–∞.")
            updated, total, train_code = await import_train_from_excel(str(dest_path))
            text = (f"‚úÖ –ü–æ–µ–∑–¥ <b>{train_code}</b> –æ–±—Ä–∞–±–æ—Ç–∞–Ω.\n"
                    f"–û–±–Ω–æ–≤–ª–µ–Ω–æ: <b>{updated}</b> –∏–∑ <b>{total}</b>.")
            await update.message.reply_html(text)

        elif is_dislocation_file(filename):
            logger.info(f"[Admin Upload] –§–∞–π–ª '{filename}' –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫ —Ñ–∞–π–ª –¥–∏—Å–ª–æ–∫–∞—Ü–∏–∏.")
            processed_count = await process_dislocation_file(str(dest_path))
            text = (f"‚úÖ –ë–∞–∑–∞ –¥–∏—Å–ª–æ–∫–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.\n"
                    f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: <b>{processed_count}</b>.")
            await update.message.reply_html(text)

        else:
            logger.warning(f"[Admin Upload] –û—Ç–∫–ª–æ–Ω–µ–Ω–æ: '{filename}' –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∞–≤–∏–ª–∞–º.")
            await update.message.reply_markdown_v2(
                "‚ùå *–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø —Ñ–∞–π–ª–∞*\n\n"
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º—è:\n"
                "‚Ä¢ `103_` –¥–ª—è –¥–∏—Å–ª–æ–∫–∞—Ü–∏–∏\n"
                "‚Ä¢ `–ö25\\-073` –¥–ª—è –ø–æ–µ–∑–¥–∞"
            )
            
    except Exception as e:
        logger.exception(f"[Admin Upload] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ '{filename}'")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")