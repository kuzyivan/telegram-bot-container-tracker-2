import os
import subprocess
import shutil
import time
from apscheduler.schedulers.background import BackgroundScheduler

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
backup_repo = os.getenv("GITHUB_BACKUP_REPO")  # —Å—Å—ã–ª–∫–∞ –Ω–∞ backup-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
github_token = os.getenv("GITHUB_TOKEN")       # —Ç–æ–∫–µ–Ω GitHub
db_file = "tracking.db"                        # –∏–º—è —Ñ–∞–π–ª–∞ –±–∞–∑—ã
clone_folder = "backup_repo_clone"              # –≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –¥–ª—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

def backup_database():
    if not backup_repo or not github_token:
        print("‚ùå –û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è.")
        return

    try:
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ø–∞–ø–∫—É –∫–ª–æ–Ω–∞ –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        if os.path.exists(clone_folder):
            shutil.rmtree(clone_folder)

        # –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –±—ç–∫–∞–ø–æ–≤
        clone_url = backup_repo.replace('https://', f'https://{github_token}@')
        subprocess.run(["git", "clone", clone_url, clone_folder], check=True)

        # –ö–æ–ø–∏—Ä—É–µ–º —Å–≤–µ–∂—É—é –±–∞–∑—É –≤ –ø–∞–ø–∫—É –∫–ª–æ–Ω–∞
        shutil.copy(db_file, os.path.join(clone_folder, db_file))

        # –ö–æ–º–º–∏—Ç –∏ –ø—É—à –∏–∑–º–µ–Ω–µ–Ω–∏–π
        os.chdir(clone_folder)
        subprocess.run(["git", "add", db_file], check=True)
        subprocess.run(["git", "commit", "-m", f"Backup {time.strftime('%Y-%m-%d %H:%M:%S')}"], check=True)
        subprocess.run(["git", "push"], check=True)
        os.chdir("..")

        # –ß–∏—Å—Ç–∏–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
        shutil.rmtree(clone_folder)

        print("‚úÖ –ë—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ GitHub.")

    except Exception as e:
        print(f"‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –±—ç–∫–∞–ø–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")

from apscheduler.triggers.cron import CronTrigger

def schedule_backup(scheduler):
    scheduler.add_job(backup_database, CronTrigger(hour=1))  # –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 01:00
    print("üïí –ó–∞–¥–∞—á–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞.")
