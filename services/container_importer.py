# services/container_importer.py
import os
import pandas as pd
from datetime import datetime
from sqlalchemy import select
from db import SessionLocal
from model.terminal_container import TerminalContainer
from logger import get_logger

logger = get_logger(__name__)

def _to_str(x: object) -> str:
    if x is None:
        return ""
    s = str(x).strip()
    return "" if s.lower() == "nan" else s

async def import_loaded_and_dispatch_from_excel(filepath: str):
    """
    –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–∏—Å—Ç–æ–≤ Loaded* –∏ Dispatch* Excel-—Ñ–∞–π–ª–∞ –∏ –î–û–ë–ê–í–õ–Ø–ï–¢ —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã.
    –ù–∏—á–µ–≥–æ –Ω–µ —É–¥–∞–ª—è–µ—Ç.
    """
    logger.info(f"üìä –ò–º–ø–æ—Ä—Ç –∏–∑ Excel: {filepath}")
    xls = pd.ExcelFile(filepath)
    sheet_names = xls.sheet_names

    total_added = 0
    async with SessionLocal() as session:
        for sheet in sheet_names:
            name_low = sheet.lower()
            if not (name_low.startswith("loaded") or name_low.startswith("dispatch")):
                continue

            logger.info(f"üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∏—Å—Ç–∞: {sheet}")
            try:
                df = pd.read_excel(filepath, sheet_name=sheet)

                added_this_sheet = 0
                for _, row in df.iterrows():
                    container_number = _to_str(
                        row.get("–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä")
                        or row.get("Container")
                        or row.get("–ù–æ–º–µ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞")
                    ).upper()

                    if not container_number:
                        continue

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è
                    exists_q = await session.execute(
                        select(TerminalContainer).where(
                            TerminalContainer.container_number == container_number
                        )
                    )
                    if exists_q.scalar_one_or_none():
                        continue

                    rec = TerminalContainer(
                        container_number=container_number,
                        terminal=_to_str(row.get("–¢–µ—Ä–º–∏–Ω–∞–ª")),
                        zone=_to_str(row.get("–ó–æ–Ω–∞")),
                        inn=_to_str(row.get("–ò–ù–ù")),
                        short_name=_to_str(row.get("–ö—Ä–∞—Ç–∫–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ")),
                        client=_to_str(row.get("–ö–ª–∏–µ–Ω—Ç")),
                        stock=_to_str(row.get("–°—Ç–æ–∫")),
                        customs_mode=_to_str(row.get("–¢–∞–º–æ–∂–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º")),
                        destination_station=_to_str(row.get("–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")),
                        note=_to_str(row.get("–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ")),
                        raw_comment=_to_str(row.get("Unnamed: 36")),
                        status_comment=_to_str(row.get("Unnamed: 37")),
                        created_at=datetime.utcnow(),
                    )
                    session.add(rec)
                    added_this_sheet += 1
                    total_added += 1

                # –ö–æ–º–º–∏—Ç –ø–æ –ª–∏—Å—Ç—É
                await session.commit()
                logger.info(f"‚úÖ {sheet}: –¥–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: {added_this_sheet}")

            except Exception as e:
                logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ª–∏—Å—Ç–∞ {sheet}: {e}", exc_info=True)

    logger.info(f"üì• –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω. –í—Å–µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {total_added}")