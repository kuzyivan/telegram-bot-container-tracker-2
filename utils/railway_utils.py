# utils/railway_utils.py
from typing import Optional
import re

# Словарь сокращений, где ключ — это код дороги (строка)
# Обновлено согласно предоставленному справочнику кодов.
RAILWAY_ABBREVIATIONS = {
    "92": "В-СИБ",      # ВОСТОЧНО-СИБИРСКАЯ (В-Сиб)
    "24": "ГОРЬК",      # ГОРЬКОВСКАЯ (Горьк)
    "96": "Д-ВОСТ",     # ДАЛЬНЕВОСТОЧНАЯ (Д-Вост)
    "94": "ЗАБ",        # ЗАБАЙКАЛЬСКАЯ (Заб)
    "83": "З-СИБ",      # ЗАПАДНО-СИБИРСКАЯ (З-Сиб)
    "10": "КЛГ",        # КАЛИНИНГРАДСКАЯ (Клг)
    "88": "КРАСН",      # КРАСНОЯРСКАЯ (Крас)
    "63": "КБШ",        # КУЙБЫШЕВСКАЯ (Кбш)
    "17": "МОСК",       # МОСКОВСКАЯ (Моск)
    "01": "ОКТ",        # ОКТЯБРЬСКАЯ (Окт) - код 01 из 01.окт
    "61": "ПРИВ",       # ПРИВОЛЖСКАЯ (Прив)
    "76": "СВЕРД",      # СВЕРДЛОВСКАЯ (Сверд)
    "28": "СЕВ",        # СЕВЕРНАЯ (Сев)
    "51": "С-КАВ",      # СЕВЕРО-КАВКАЗСКАЯ (С-Кав)
    "58": "Ю-ВОСТ",     # ЮГО-ВОСТОЧНАЯ (Ю-Вост)
    "80": "Ю-УР",       # ЮЖНО-УРАЛЬСКАЯ (Ю-Ур)
    
    # Украинские ж.д.
    "48": "ДОН",        # ДОНЕЦКАЯ (Дон)
    "35": "ЛЬВ",        # ЛЬВОВСКАЯ (Льв)
    "40": "ОД",         # ОДЕССКАЯ (Од)
    "45": "ПРИДН",      # ПРИДНЕПРОВСКАЯ (Придн)
    "32": "Ю-ЗАП",      # ЮГО-ЗАПАДНАЯ (Ю-Зап)
    "43": "ЮЖН",        # ЮЖНАЯ (Южн)
    
    # СНГ и Балтия
    "13": "БЕЛ",        # БЕЛОРУССКАЯ (Бел)
    "68": "КЗХ",        # КАЗАХСТАН ТЕМИР ЖОЛЫ (Кзх)
    "39": "МЛД",        # МОЛДАВСКАЯ (Млд)
    "73": "УЗБК",       # УЗБЕКИСТАН ТЕМИР ЙУЛЛАРИ (Узбк)
    "75": "ТРК",        # ТУРКМЕНИСТАН (Трк)
    "70": "КЫРГ",       # КЫРГЫЗСКАЯ (Кырг)
    "74": "ТАДЖ",       # ТАДЖИКСКАЯ (Тадж)
    "55": "АЗЕРБ",      # АЗЕРБАЙДЖАНСКАЯ (Азерб)
    "56": "АРМ",        # ЮЖНО-КАВКАЗСКАЯ (Арм)
    "57": "ГРЗ",        # ГРУЗИНСКАЯ (Грз)
    "09": "ЛАТ",        # ЛАТВИЯ (Лат)
    "12": "ЛИТ",        # ЛИТВА (Лит)
    "08": "ЭСТ",        # ЭСТОНИЯ (Эст)
    "91": "ЖДЯ",        # ЖЕЛЕЗНЫЕ ДОРОГИ ЯКУТИИ (ЖДЯ)
    
    # Код, который был в исходном файле, но без точного соответствия в списке
    "98": "ДВОСТ", # Дальневосточная (в исходном коде) - оставляем, но приводим к "Д-ВОСТ" если нужно
    "77": "СВЕРД", # Свердловская (в исходном коде) - оставляем как 76
    "85": "З-СИБ", # Западно-Сибирская (в исходном коде) - оставляем как 83
    "87": "ВОСТ-СИБ", # Восточно-Сибирская (в исходном коде) - оставляем как 92
    "81": "КЛГ", # Калининградская (в исходном коде) - оставляем как 10

    # Добавьте другие сокращения по полному имени, если нужно
}

def get_railway_abbreviation(railway_str: Optional[str]) -> str:
    """
    Извлекает код дороги из строки (например, 'ЗАБАЙКАЛЬСКАЯ (94)') 
    и возвращает ее общепринятое сокращение.
    """
    if not railway_str:
        return 'н/д'
    
    # 1. Ищем код дороги в скобках (самый надежный способ)
    match = re.search(r'\((\d+)\)', railway_str)
    if match:
        code = match.group(1).strip()
        # Добавляем ведущий ноль для кодов 8 и 9, если они пришли из (9) и (8)
        if len(code) == 1:
            code = "0" + code
            
        # 2. Ищем сокращение по коду
        # Если код не найден в словаре, возвращаем оригинальную строку
        return RAILWAY_ABBREVIATIONS.get(code, railway_str)
        
    # 3. Если код не найден, пытаемся извлечь из начала строки
    # (для случаев, когда код не указан, но есть полное имя дороги)
    for code, abbr in RAILWAY_ABBREVIATIONS.items():
        if abbr in railway_str.upper():
            return abbr

    # 4. Если ничего не найдено, возвращаем оригинальную строку
    return railway_str