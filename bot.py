import logging
import traceback
import html
import json
from telegram import Update, BotCommand
from telegram.ext import (
    Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes
)

from config import TOKEN, ADMIN_CHAT_ID, RENDER_HOSTNAME, PORT
from mail_reader import start_mail_checking
from scheduler import start_scheduler
# keep_alive –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ Render –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —ç—Ç–æ–≥–æ.
# from utils.keep_alive import keep_alive 
from handlers.user_handlers import (
    start, handle_sticker, handle_message, show_menu,
    menu_button_handler, reply_keyboard_handler, dislocation_inline_callback_handler
)
from handlers.admin_handlers import stats, exportstats, tracking, test_notify
from handlers.tracking_handlers import (
    tracking_conversation_handler,
    cancel_tracking,
    cancel_tracking_confirm
)

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫.
    –õ–æ–≥–∏—Ä—É–µ—Ç –≤—Å–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
    """
    logger.error(msg="Exception while handling an update:", exc_info=context.error)

    # –°–æ–±–∏—Ä–∞–µ–º traceback
    tb_list = traceback.format_exception(None, context.error, context.error.__traceback__)
    tb_string = "".join(tb_list)

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    update_str = update.to_dict() if isinstance(update, Update) else str(update)
    message = (
        f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞\n\n"
        f"<b>Update:</b>\n<pre>{html.escape(json.dumps(update_str, indent=2, ensure_ascii=False))}</pre>\n\n"
        f"<b>Context.chat_data:</b>\n<pre>{html.escape(str(context.chat_data))}</pre>\n\n"
        f"<b>Context.user_data:</b>\n<pre>{html.escape(str(context.user_data))}</pre>\n\n"
        f"<b>Traceback:</b>\n<pre>{html.escape(tb_string)}</pre>"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, —Ä–∞–∑–±–∏–≤–∞—è –Ω–∞ —á–∞—Å—Ç–∏, –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
    for i in range(0, len(message), 4096):
        await context.bot.send_message(
            chat_id=ADMIN_CHAT_ID, text=message[i:i+4096], parse_mode='HTML'
        )

async def set_bot_commands(application: Application):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã, –≤–∏–¥–∏–º—ã–µ –≤ –º–µ–Ω—é Telegram."""
    await application.bot.set_my_commands([
        BotCommand("start", "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ / –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
        BotCommand("menu", "üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
        BotCommand("canceltracking", "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –≤—Å–µ —Å–ª–µ–∂–µ–Ω–∏—è"),
        BotCommand("stats", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–∞–¥–º–∏–Ω)"),
        BotCommand("exportstats", "üì• –í—ã–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–∞–¥–º–∏–Ω)"),
        BotCommand("testnotify", "üîî –¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ (–∞–¥–º–∏–Ω)"),
    ])

def main():
    # keep_alive() # Render –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —ç—Ç–æ–≥–æ
    
    application = Application.builder().token(TOKEN).build()

    # –î–û–ë–ê–í–õ–ï–ù –ì–õ–û–ë–ê–õ–¨–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –û–®–ò–ë–û–ö
    application.add_error_handler(error_handler)

    async def post_init(app: Application):
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
        await start_mail_checking()
        start_scheduler(app.bot)
        await set_bot_commands(app)
    
    application.post_init = post_init

    # ConversationHandler –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –æ–¥–Ω–∏–º –∏–∑ –ø–µ—Ä–≤—ã—Ö
    application.add_handler(tracking_conversation_handler())
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ CallbackQueryHandler (–Ω–∞–∂–∞—Ç–∏—è –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏)
    application.add_handler(CallbackQueryHandler(menu_button_handler, pattern="^(start|dislocation|track_request)$"))
    application.add_handler(CallbackQueryHandler(dislocation_inline_callback_handler, pattern="^dislocation_inline$"))
    application.add_handler(CallbackQueryHandler(cancel_tracking_confirm, pattern="^cancel_tracking_"))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("menu", show_menu))
    application.add_handler(CommandHandler("canceltracking", cancel_tracking))
    
    # –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
    application.add_handler(CommandHandler("stats", stats))
    application.add_handler(CommandHandler("exportstats", exportstats))
    application.add_handler(CommandHandler("tracking", tracking))
    application.add_handler(CommandHandler("testnotify", test_notify))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    application.add_handler(MessageHandler(
        filters.Regex("^(üì¶ –î–∏—Å–ª–æ–∫–∞—Ü–∏—è|üîî –ó–∞–¥–∞—Ç—å —Å–ª–µ–∂–µ–Ω–∏–µ|‚ùå –û—Ç–º–µ–Ω–∞ —Å–ª–µ–∂–µ–Ω–∏—è)$"),
        reply_keyboard_handler
    ))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.Sticker.ALL, handle_sticker))
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    logger.info("‚ú® –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")

    # –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –≤–µ–±—Ö—É–∫–æ–≤ –¥–ª—è Render
    application.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        url_path=TOKEN,
        webhook_url=f"https://{RENDER_HOSTNAME}/{TOKEN}",
    )

if __name__ == "__main__":
    main()
