import logging
from telegram.ext import (
    Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters
)
from telegram import BotCommand

from config import TOKEN, ADMIN_CHAT_ID, RENDER_HOSTNAME, PORT
from mail_reader import start_mail_checking
from scheduler import start_scheduler
from utils.keep_alive import keep_alive
from handlers.user_handlers import (
    start, handle_sticker, handle_message, show_menu,
    menu_button_handler, reply_keyboard_handler, dislocation_inline_callback_handler
)
from handlers.admin_handlers import stats, exportstats, tracking, test_notify
from db import SessionLocal
from handlers.tracking_handlers import tracking_conversation_handler, cancel_tracking

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def set_bot_commands(application):
    await application.bot.set_my_commands([
        BotCommand("start", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
        BotCommand("menu", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
        BotCommand("stats", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–∞–¥–º–∏–Ω)"),
        BotCommand("exportstats", "–í—ã–≥—Ä—É–∑–∫–∞ (–∞–¥–º–∏–Ω)"),
        BotCommand("testnotify", "–¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ (–∞–¥–º–∏–Ω)"),
        BotCommand("canceltracking", "–û—Ç–º–µ–Ω–∏—Ç—å –≤—Å–µ —Å–ª–µ–∂–µ–Ω–∏—è")  # –Ω–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
    ])

def main():
    keep_alive()
    application = Application.builder().token(TOKEN).build()

    async def post_init(application):
        await start_mail_checking()                # –í–ê–ñ–ù–û: —Ç–µ–ø–µ—Ä—å await!
        start_scheduler(application.bot)
        await set_bot_commands(application)
    application.post_init = post_init

    # –í–∞–∂–Ω–æ! ConversationHandler ‚Äî –ü–ï–†–í–´–ú
    application.add_handler(tracking_conversation_handler())
    # Inline-–º–µ–Ω—é
    application.add_handler(CallbackQueryHandler(menu_button_handler, pattern="^(start|dislocation|track_request)$"))
    application.add_handler(CallbackQueryHandler(dislocation_inline_callback_handler, pattern="^dislocation_inline$"))
    # –ö–æ–º–∞–Ω–¥—ã
    application.add_handler(CommandHandler("menu", show_menu))
    application.add_handler(CommandHandler("start", start))
    # ReplyKeyboard –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    application.add_handler(MessageHandler(
        filters.Regex("^(üì¶ –î–∏—Å–ª–æ–∫–∞—Ü–∏—è|üîî –ó–∞–¥–∞—Ç—å —Å–ª–µ–∂–µ–Ω–∏–µ)$"),
        reply_keyboard_handler
    ))
    application.add_handler(CommandHandler("canceltracking", cancel_tracking))
    # –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("stats", stats))
    application.add_handler(CommandHandler("exportstats", exportstats))
    application.add_handler(CommandHandler("tracking", tracking))
    application.add_handler(CommandHandler("testnotify", test_notify))
    application.add_handler(MessageHandler(filters.Sticker.ALL, handle_sticker))
    # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç ‚Äî –¢–û–õ–¨–ö–û –í –ö–û–ù–¶–ï!
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    logger.info("‚ú® –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")

    application.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        url_path=TOKEN,
        webhook_url=f"https://{RENDER_HOSTNAME}/{TOKEN}",
    )

if __name__ == "__main__":
    main()
